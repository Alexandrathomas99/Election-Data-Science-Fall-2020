by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc)
View(protest)
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage)))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
View(protest)
ggplot(data = protest, aes(x=Date, y = PerOfCoverage, color = Series)) +
geom_line()
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~series)
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series)
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_line()
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=protest%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200601120000&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=protest%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200601120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22protest%22OR%22Black%20Lives%20Matter%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200601120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200601120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200601120000&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200601120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&DURATION=150days&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&DURATION=150days&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&TIMESPAN=150days&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&TIMESPAN=150days&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violen%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violent%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
url1<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22%20context:%22violence%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
url2<- "https://api.gdeltproject.org/api/v2/tv/tv?query=(%22black%20lives%20matter%22OR%22protest%22)%20market:%22National%22&mode=timelinevol&format=csv&datanorm=perc&timelinesmooth=0&datacomb=sep&last24=yes&STARTDATETIME=20200525120000&timezoom=yes"
protest_violent <- httr::GET(url1) %>%
httr::content()%>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest_no_context<-httr::GET(url2) %>%
httr::content() %>%
rename(Date=1) %>%
filter(Series %in% c("CNN", "CNBC", "FOXNEWS", "MSNBC"))
protest <- full_join(protest_no_context, protest_violent,
by = c("Date", "Series")) %>%
rename(FullPerc = Value.x, ViolentPerc = Value.y) %>%
mutate(PerOfCoverage = ViolentPerc/FullPerc) %>%
mutate(PerOfCoverage = ifelse(is.nan(PerOfCoverage),0,PerOfCoverage))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm")
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth(method = "lm")
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm")
?labs
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm") +
ylab("Percent of Coverage")
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Percent of total News Coverage") + labs(title = "")
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line() + facet_wrap(~Series) +geom_smooth(method = "lm", se = F)
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\" or \"Protests\" less frequently. But...")
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently. But...")
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May. But...")+
theme_minimal()
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May. But...",
caption = "Blue line is linear fit.")+
theme_minimal() + theme(plot.caption = element_text(size = 4))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May. But...",
caption = "Blue line is linear fit.")+
theme_minimal() + theme(plot.caption = element_text(size = 6))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0")+
theme_minimal() + theme(plot.caption = element_text(size = 6))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line() + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line(color = "#919191") + facet_wrap(~Series)+geom_smooth(method = "lm", se = F) +
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0.
Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line(color = "#919191") + facet_wrap(~Series)+geom_smooth(method = "lm", se = F, color = "#84B2BC") +
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0.
Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line(color = "#919191") + facet_wrap(~Series)+
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0.
Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal()
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(title = "Coverage in the context of \"Violence\" is up for Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line(color = "#919191") + facet_wrap(~Series)+
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"),
plot.title = element_text(hjust = 0))
ggplot(data = protest, aes(x=Date, y = FullPerc)) +
geom_line(color = "#919191") + facet_wrap(~Series)+
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"),
plot.title = element_text(hjust = 0))
ggplot(data = protest, aes(x=Date, y = (FullPerc/100))) +
geom_line(color = "#919191") + facet_wrap(~Series)+
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"),
plot.title = element_text(hjust = 0))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +geom_smooth(method = "lm", se = F) +
ylab("Percent of Protest Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(title = "The percent of coverage about \"Black Lives Matter\"\n or \"Protests\" in the context of \"Violence\" is up\nfor Fox and MSNBC",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = (FullPerc/100))) +
geom_line(color = "#919191") + facet_wrap(~Series)+
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most News Networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"),
plot.title = element_text(hjust = 0))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
ylab("Percent of Protest Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(title = "The percent of coverage about \"Black Lives Matter\"\n or \"Protests\" in the context of \"Violence\" has increased \nfor Fox and MSNBC while staying constant for CNN",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
ggplot(data = protest, aes(x=Date, y = (FullPerc/100))) +
geom_line(color = "#919191") + facet_wrap(~Series)+
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
ylab("Normalized Percent of total News Coverage") +
labs(title = "Most national news networks are Covering \"Black Lives Matter\"\nor \"Protests\" less frequently since May 25th. But...",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"),
plot.title = element_text(hjust = 0))
ggplot(data = protest, aes(x=Date, y = PerOfCoverage)) +
geom_line(color = "#919191") + facet_wrap(~Series) +
geom_smooth(method = "lm", se = F, color = "#AED1FF") +
ylab("Percent of Protest Coverage in Context of \"Violence\"")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(title = "The percent of coverage about \"Black Lives Matter\"\n or \"Protests\" in the context of \"Violence\" has increased \nfor Fox and MSNBC while staying constant for CNN",
caption = "Blue line is linear fit. Data from GDELT TV API 2.0. Analysis by Peter Licari.")+
theme_minimal() + theme(plot.caption = element_text(size = 6, hjust = 0,
color = "#5B5B5B"))
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(dumdum)
library(stargazer)
library(sandwich)
library(quantreg)
library(nnet)
library(textreadr)
setwd("H:/Research/2020 Research/CopsandProtesters/Analyses/")
exp1 <- read_csv("cleaned_data.csv")
ordinal_scale <- function(x){
case_when(
x == 1 ~ 3,
x == 2 ~ 1,
x == 3 ~ 2
)
}
exp1$pid<-as.integer(exp1$pid)
EXP <- exp1 %>%
filter(exp == 1,  police_pre < 10000, protest_pre < 10000, police_post < 10000,
protest_post < 10000) %>%
mutate(across(.cols = c(policekilled_pre, killedby_pre, killedby_post,
policekilled_pre_1), ordinal_scale)) %>%
mutate(policekilled_diff = police_pre - police_post,
protestkilled_diff =protest_pre - protest_post,
police5yr_diff = policekilled_pre - policekilled_pre_1,
deaths5yr_diff = killedby_pre - killedby_post,
pid = ifelse(pid ==4, 3 , pid),
pid = as.integer(pid)) %>%
mutate(policekilled_cat = case_when(
policekilled_diff < -5 ~ "lowered",
policekilled_diff > 5 ~ "raised",
abs(policekilled_diff) < 5 ~ "same"
)) %>%
dummify("pid", keepNA = F, dumNames = c("REPDum" = 2,"DEMDum" = 1), reference = 3 ) %>%
mutate(REPDum = case_when(
ind == 1 ~ 1,
TRUE ~ REPDum
),
DEMDum =  case_when(
ind==2 ~ 1,
TRUE ~ DEMDum)) %>%
mutate(media_condition = case_when(
!is.na(Q411) ~ "MSNBC",
!is.na(Q423) ~ "FOX",
!is.na(Q417) ~ "AP"
)) %>%
dummify("media_condition", keepNA = F, reference = "AP", dumNames = c("MSNBCDUM" = "MSNBC",
"FOXDUM" = "FOX")) %>%
mutate(REPMSNBC = REPDum * MSNBCDUM,
REPFOX = REPDum * FOXDUM,
DEMMSNBC = DEMDum *MSNBCDUM,
DEMFOX = DEMDum * FOXDUM) %>%
mutate(timing = case_when(
!is.na(msnbc_t_3) ~ msnbc_t_3,
!is.na(fox_t_3) ~ fox_t_3,
!is.na(ap_t_3) ~ ap_t_3
))
ggplot(data = EXP %>% filter(timing < 1000), aes(x = timing))+geom_histogram(binwidth = 3)
EXP_filt <- EXP %>%
filter(timing > 15)
##Controls
EXP_conts<-EXP_filt
EXP_conts$ideo<-ifelse(EXP_conts$ideo==8,NA,EXP_conts$ideo)
EXP_conts <- EXP_conts %>%
mutate(PID7 = case_when(
dem == 1 ~ 1,
dem == 2 ~ 2,
ind == 2 ~ 3,
ind == 3 ~ 4,
ind == 1 ~ 5,
rep == 2 ~ 6,
rep == 1 ~ 7
))
EXP_conts$gender_1 <- as.integer(EXP_conts$gender_1)
EXP_conts$race <- as.integer(EXP_conts$race)
EXP_conts <- dummify(data = EXP_conts, var = "gender_1", reference = c(1,3), dumNames = "Female", keepNA = F)
EXP_conts <- dummify(data = EXP_conts, var = "race", reference = c(5),
dumNames = c("Other"=6, "Native_Am"=4,"Hisp"=3,"Black"=2,"Asian"=1), keepNA = F)
EXP_conts$policekilled_pre <- as.integer(EXP_conts$policekilled_pre)
EXP_conts <- dummify(data = EXP_conts, var = "policekilled_pre", reference = c(2,3), dumNames = "Cop_Deaths_Up", keepNA = F)
### IVs at 0
EXP_conts <- EXP_conts %>%
mutate(ideo = ideo - 4,
educ = educ - 1,
interest = interest - 1,
age= age - min(age),
PID7 = PID7 - 4)
nrow(exp1%>%filter(exp ==1))
pretest_sum_data <- EXP_conts %>% select(police_pre, protest_pre, policekilled_pre, killedby_pre)
sapply(pretest_sum_data, mean, na.rm = TRUE)
pretest_sum_data <- EXP_conts %>% select(police_pre, protest_pre, policekilled_pre, killedby_pre)
sapply(pretest_sum_data, mean, na.rm = TRUE)
sapply(pretest_sum_data, sd, na.rm = TRUE)
pretest_sum_data <- EXP_conts %>% select(police_pre, protest_pre, policekilled_pre, killedby_pre)
sapply(pretest_sum_data, mean, sd, na.rm = TRUE)
pretest_sum_data <- EXP_conts %>% select(police_pre, protest_pre, policekilled_pre, killedby_pre)
sapply(pretest_sum_data, mean, na.rm = TRUE)
sapply(pretest_sum_data, sd, na.rm = TRUE)
summary(pretest_sum_data)
#Protester 5 years difference
pro5mod<-lm(deaths5yr_diff ~ REPDum + DEMDum + FOXDUM + MSNBCDUM + REPMSNBC + REPFOX +
DEMMSNBC + DEMFOX, data = EXP_filt)
robust_pro5mod<- sqrt(diag(vcovHC(pro5mod, type = "HC1")))
#Police 5 years difference
pol5mod<-lm(police5yr_diff ~ REPDum + DEMDum + FOXDUM + MSNBCDUM + REPMSNBC + REPFOX +
DEMMSNBC + DEMFOX, data = EXP_filt)
robust_pol5mod<- sqrt(diag(vcovHC(pol5mod, type = "HC1")))
stargazer(pol5mod, pro5mod, type = "html", se = list(robust_pol5mod, robust_pro5mod))
#Protester 5 years difference
pro5mod<-lm(deaths5yr_diff ~ REPDum + DEMDum + FOXDUM + MSNBCDUM + REPMSNBC + REPFOX +
DEMMSNBC + DEMFOX+ideo + educ + interest + age + Female +
Other + Native_Am + Hisp + Black + Asian, data = EXP_filt)
