devtools::install_github("prlitics/dumdum")
library(rvest)
url <- "https://en.wikipedia.org/wiki/2018_Florida_elections"
test <- url %>%
read_html() %>%
html_node("body #mw-content-text")
View(test)
test
test[1]
test[[1]]
test <- url %>%
read_html() %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[3]
") %>%
html_table()
View(test)
test <- url %>%
read_html() %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]
") %>%
html_table()
test <- url %>%
read_html() %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]
") %>%
html_table(fill = TRUE)
View(test)
test <- url %>%
read_html() %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[3]/tbody") %>%
html_table(fill = TRUE)
test <- url %>%
read_html() %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[3]/tbody") %>%
html_table()
test <- url %>%
read_html() %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/table[3]") %>%
html_table()
View(test)
test <- url %>%
read_html() %>%
html_node(xpath = "//*[@id="mw-content-text"]/div[1]/table[3]") %>%
html_table()
test <- url %>%
read_html() %>%
html_node(xpath = '//*[@id="mw-content-text"]/div[1]/table[3]') %>%
html_table()
View(test)
test <- url %>%
read_html() %>%
html_node(xpath = '//*[@id="mw-content-text"]')
test <- url %>%
read_html() %>%
html_node(xpath = '//*[@id="mw-content-text"]') %>%
html_table()
test <- url %>%
read_html() %>%
html_node(xpath = '//*[@id="mw-content-text"]') %>%
html_children()
View(test)
test
View(test)
test[[3]]
test <- url %>%
read_html() %>%
html_node(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]') %>%
html_table()
url <- "https://en.wikipedia.org/wiki/2018_Florida_elections"
test <- url %>%
read_html() %>%
html_node(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]') %>%
html_table()
content <- read_html("https://en.wikipedia.org/wiki/List_of_highest-grossing_films_in_the_United_States_and_Canada")
tables <- content %>% html_table(fill = TRUE)
test<-tables[[1]]
View(test)
View(tables)
url <- "https://en.wikipedia.org/wiki/2018_Florida_elections"
test <- url %>%
html_table()
test <- url %>%
html_table(fill = TRUE)
test <- url %>%
read_html() %>%
html_node(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "wikitable", " " ))]') %>%
html_table()
View(test)
test <- url %>%
read_html() %>%
html_node(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "wikitable", " " ))]') %>%
html_table()
View(test)
url <- "https://en.wikipedia.org/wiki/2018_United_States_House_of_Representatives_elections_in_Florida"
test <- url %>%
read_html() %>%
html_node(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "jquery-tablesorter", " " ))]') %>%
html_table()
test <- url %>%
read_html() %>%
html_node(xpath = '/html/body/div[3]/div[3]/div[5]/div[1]/table[3]') %>%
html_table()
test <- url %>%
read_html() %>%
html_node(xpath = '/html/body/div[3]/div[3]/div[5]/div[1]/table[3]') %>%
html_table(fill=TRUE)
View(test)
options(htmltools.dir.version = FALSE)
url <- "https://en.wikipedia.org/wiki/2018_United_States_House_of_Representatives_elections_in_Florida"
fl_web_raw <- url %>%
read_html() %>%
html_node(xpath = '/html/body/div[3]/div[3]/div[5]/div[1]/table[3]') %>%
html_table(fill=TRUE)
knitr::kable(fl_web_raw)
View(fl_web_raw)
fl_clean <- fl_web_raw
colnames(fl_clean) <- newcols
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
fl_clean <- fl_web_raw
colnames(fl_clean) <- newcols
View(fl_clean)
fl_clean1<-fl_clean[-1:2,]
fl_clean1<-fl_clean[-1,]
fl_clean1<-fl_clean[-c(1:2),]
View(fl_clean1)
library(tidyverse)
library(readxl)
library(httr)
library(rvest)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2),]
rep_dash <- function(x){ifelse(grepl(x, "-"),NA,x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash))
View(fl_clean_final)
View(fl_clean)
fl_clean_final <- fl_clean %>%
mutate(across(Rvotes,rep_dash))
?grepl
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2),]
rep_dash <- function(x){ifelse(grepl("-",x),NA, x)}
fl_clean_final <- fl_clean %>%
mutate(across(Rvotes,rep_dash))
View(fl_clean_final)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash))
View(fl_clean_final)
url <- "https://en.wikipedia.org/wiki/2018_United_States_House_of_Representatives_elections_in_Florida"
fl_web_raw <- url %>%
read_html() %>%
html_node(xpath = '/html/body/div[3]/div[3]/div[5]/div[1]/table[3]') %>%
html_table(fill=TRUE)
knitr::kable(fl_web_raw)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash))
View(fl_clean_final)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){as.numeric(sub("%","",x))}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("Per"),percent))
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){sub("%","",x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("Per"),percent))
View(fl_clean_final)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "Rvotes","Rper", "DVotes", "DPer", "Othervotes", "OtherPer",
"TotalVotes", "TotalPer", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){sub("%","",x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("Per"),percent)) %>%
mutate(across(contains("Per"),as.numeric))
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "R_Votes","R_Per", "D_Votes", "D_Per", "Other_Votes", "Other_Per",
"Total_Votes", "Total_Per", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){sub("%","",x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent)) %>%
mutate(across(contains("_Per"),as.numeric))
View(fl_clean_final)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "R_Votes","R_Per", "D_Votes", "D_Per", "Other_Votes", "Other_Per",
"Total_Votes", "Total_Per", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){
x <- sub("%","",x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent))
View(fl_clean_final)
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "R_Votes","R_Per", "D_Votes", "D_Per", "Other_Votes", "Other_Per",
"Total_Votes", "Total_Per", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){
x <- sub("%","",x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent)) %>%
mutate(across(-matches("District"), as.numeric))
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "R_Votes","R_Per", "D_Votes", "D_Per", "Other_Votes", "Other_Per",
"Total_Votes", "Total_Per", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
tonum <- function(x){
x <- sub("%","",x)
x <- sub(",", x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(-matches("District"),tonum))
fl_clean <- fl_web_raw
#New Column Names
newcols <- c("District", "R_Votes","R_Per", "D_Votes", "D_Per", "Other_Votes", "Other_Per",
"Total_Votes", "Total_Per", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){
x <- sub("%","",x)
x <- sub(",", x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent)) %>%
mutate(across(-matches("District"), percent))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent))
View(fl_clean)
fl_clean <- fl_web_raw
newcols <- c("District", "R_Votes","R_Per", "D_Votes", "D_Per", "Other_Votes", "Other_Per",
"Total_Votes", "Total_Per", "Results")
#Assigning new column names
colnames(fl_clean) <- newcols
#Removing first two rows
fl_clean<-fl_clean[-c(1:2,30),]
rep_dash <- function(x){ifelse(grepl("–",x),NA, x)}
percent <- function(x){
x <- sub("%","",x)
x <- sub(",", x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent)) %>%
mutate(across(-matches("District"), percent))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"),percent))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"), percent))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash))
View(fl_clean_final)
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"), percent))
percent <- function(x){
x <- sub("%","",x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"), percent))
percent <- function(x){
x <- sub("%","",x)
x <- sub(",","", x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"), percent))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"), percent)) %>%
mutate(across(-matches("District"), percent))
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(contains("_Per"), percent)) %>%
mutate(across(-matches(c("District","Results")), percent))
View(fl_clean_final)
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(-matches(c("District","Results")), fixnum))
fixnum <- function(x){
x <- sub("%","",x)
x <- sub(",","", x)
x <- as.numeric(x)}
fl_clean_final <- fl_clean %>%
mutate(across(everything(),rep_dash)) %>%
mutate(across(-matches(c("District","Results")), fixnum))
datatable(fl_clean_final, options = list(
scrollX = TRUE,
scrollY = '200px',
paging = FALSE,
autoWidth = TRUE))
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF",
text_font_google = google_font("Poppins")
)
xaringanExtra::use_xaringan_extra()
library(tidyverse)
library(DT)
datatable(fl_clean_final, options = list(
scrollX = TRUE,
scrollY = '200px',
paging = FALSE,
autoWidth = TRUE))
library(kableExtra)
install.packages("kableExtra")
library(xaringanthemer)
style_duo_accent(
primary_color = "#1381B0",
secondary_color = "#FF961C",
inverse_header_color = "#FFFFFF",
text_font_google = google_font("Poppins")
)
xaringanExtra::use_xaringan_extra()
library(tidyverse)
library(kableExtra)
kbl(fl_clean_final)
kbl(fl_clean_final) %>%
scroll_box(width = "500px", height = "200px")
?read.csv
?readr::read_csv()
pagedown::chrome_print("DataVisualization-Tutorial.html")
setwd("C:\\Users\\prlic\\Documents\\GitHub\\Election-Data-Science-Fall-2020\\Week 5\\")
pagedown::chrome_print("DataVisualization-Tutorial.html")
pagedown::chrome_print("DataVisualization.html")
pagedown::chrome_print("DataVisualization.html")
library(anesr)
data("timeseries_2016")
View(timeseries_2016)
library(palmerpenguins)
pengu <- penguins
View(pengu)
library(tidyverse)
p <- ggplot(data = pengu, aes(x = bill_length_mm, y = bill_depth_mm)) + geom_point
p <- ggplot(data = pengu, aes(x = bill_length_mm, y = bill_depth_mm)) + geom_point()
p
i <- 1
for (x in 1:10) {
i <- x + i
print(i)
}
p <- p + theme_bw()
p
p <- ggplot(data = pengu, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) + geom_point()
p
Polarization <- anes16 %>%
mutate(PID = case_when(
V161158x < 4 ~ "Democrat",
V161158x > 4 ~ "Republican",
V161158x == 4 ~ "Independent"
)) %>%
group_by(PID) %>%
select(129:139) %>%
summarise_all(mean) %>%
pivot_longer(!PID, names_to = "termometer", values_to = "mean") %>%
pivot_wider(names_from = "PID", values_from = "mean") %>%
mutate(DR_Diff = Democrat - Republican)
library(anesr)
data(timeseries_2016)
anes16 <- timeseries_2016
rm(timeseries_2016)
Polarization <- anes16 %>%
mutate(PID = case_when(
V161158x < 4 ~ "Democrat",
V161158x > 4 ~ "Republican",
V161158x == 4 ~ "Independent"
)) %>%
group_by(PID) %>%
select(129:139) %>%
summarise_all(mean) %>%
pivot_longer(!PID, names_to = "termometer", values_to = "mean") %>%
pivot_wider(names_from = "PID", values_from = "mean") %>%
mutate(DR_Diff = Democrat - Republican)
neg_val <- function(x){
ifelse(x<0,NA,x)
}
rename(.fn=3)
states <- poliscidata::states
states$statesid <- trimws(as.character(states$stateid),which= "right")
Guns <- merge(x=anes16, y= states, by.x = "v161010e", by.y = "stateid")
dataset3<-read.delim("https://raw.githubusercontent.com/prlitics/Election-Data-Science-Fall-2020/master/Data/wk4_challenge2.c.txt")
View(dataset3)
thecrown<-"https://en.wikipedia.org/wiki/List_of_British_monarchs"
wiki <- read_html(thecrown) %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[2]")%>%
html_table()
library(rvest)
wiki <- read_html(thecrown) %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[2]")%>%
html_table()
View(wiki)
